<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intuit.Ipp.Security</name>
    </assembly>
    <members>
        <member name="T:Intuit.Ipp.Security.SecurityConstants">
            <summary>
            Constants for security assembly.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.USERNAMEAUTHREQUESTURI">
            <summary>
            Request Uri for User name authentication model.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.OAUTHREQUESTTOKENURI">
            <summary>
            Request token Uri for OAuth authentication model.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.OAUTHAUTHORIZEREQUESTURL">
            <summary>
            Authorize Request Uri for OAuth authentication model.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.OAUTHACCESSTOKENURL">
            <summary>
            Access token Uri for OAuth authentication model.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.QBNCOOKIEPREFIX">
            <summary>
            Qbn Cookie Prefix value.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.SEMICOLONSTRING">
            <summary>
            Semi Colon(;) string value.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.SecurityConstants.EQUALSSTRINGVALUE">
            <summary>
            Equals(=) string value;
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Security.IRequestValidator">
            <summary>
            Interface for request validate
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Security.IRequestValidator.Authorize(System.Net.WebRequest,System.String)">
            <summary>
            Authorizes the web request.
            </summary>
            <param name="webRequest">The web request.</param>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="T:Intuit.Ipp.Security.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.ErrorCodeMissing">
            <summary>
              Looks up a localized string similar to API response without error code element..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.ErrorCodeNonNemeric">
            <summary>
              Looks up a localized string similar to Error code &quot;{0}&quot; not numeric!.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.ErrorDetails0">
            <summary>
              Looks up a localized string similar to {0} (Error {1}, Detail: {2}).
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.ErrorDetails1">
            <summary>
              Looks up a localized string similar to {0} (Error {1}).
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.Properties.Resources.ErrorWithNoText">
            <summary>
              Looks up a localized string similar to Error {0}.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Security.CookieBasedRequestValidator">
            <summary>
            IAM Cookie implementation for Request validate contract.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.CookieBasedRequestValidator.iamCookie">
            <summary>
            The qbn cookie string
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.CookieBasedRequestValidator.appToken">
            <summary>
            The Application Token
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Security.CookieBasedRequestValidator.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CookieBasedRequestValidator class.
            </summary>
            <param name="iamCookie">The iam cookie.</param>
            <param name="appToken">Application Token.</param>
            <exception>IdsException: Thrown when anyone of the passed credentials are invalid.</exception>
        </member>
        <member name="M:Intuit.Ipp.Security.CookieBasedRequestValidator.#ctor(System.Web.HttpCookieCollection,System.String)">
            <summary>
            Initializes a new instance of the CookieBasedRequestValidator class.
            </summary>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="appToken">Application Token.</param>
            <exception>IdsException: Thrown when anyone of the passed credentials are invalid.</exception>
        </member>
        <member name="M:Intuit.Ipp.Security.CookieBasedRequestValidator.Authorize(System.Net.WebRequest,System.String)">
            <summary>
            Authorizes the specified request.
            </summary>
            <param name="webRequest">The request.</param>
            <param name="requestBody">The body if form encoded parameters.</param>
        </member>
        <member name="M:Intuit.Ipp.Security.CookieBasedRequestValidator.IamValidationTime">
            <summary>
             This method gives seconds since the Unix epoch
            </summary>
            <returns> Seconds since the Unix epoch</returns>
        </member>
        <member name="P:Intuit.Ipp.Security.CookieBasedRequestValidator.AppToken">
            <summary>
            Gets or sets the The Application Token
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Security.CookieBasedRequestValidator.IamCookie">
            <summary>
            Gets or sets the qbn cookie string
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Security.OAuthRequestValidator">
            <summary>
            OAuth implementation for Request validate contract.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.OAuthRequestValidator.AuthorizationHeader">
            <summary>
            The Authorization Header constant.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Security.OAuthRequestValidator.oauthSignatureMethod">
            <summary>
            The O auth signature method.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Security.OAuthRequestValidator"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="accessTokenSecret">The access token secret.</param>
            <param name="consumerKey">The consumer key.</param> 
            <param name="consumerSecret">The consumer secret.</param>
            <exception>InvalidTokenException: Thrown when anyone of the passed credentials are invalid.</exception>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Security.OAuthRequestValidator"/> class.
            </summary>
            <param name="applicationToken">The application token.</param>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.Authorize(System.Net.WebRequest,System.String)">
            <summary>
            Authorizes the specified request.
            </summary>
            <param name="webRequest">The request.</param>
            <param name="requestBody">The requestBody if form encoded parameters.</param>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.ParsePagingString(System.String)">
            <summary>
            Parses the string to Dictionary.
            </summary>
            <param name="tobeParsed">The string to be parsed.</param>
            <returns>Returns the dictionary object after parsing.</returns>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.CreateOAuthSessionWithConsumerContext(DevDefined.OAuth.Consumer.IOAuthConsumerContext)">
            <summary>
            Creates the OAuth session with consumer context.
            </summary>
            <param name="consumerContext">The consumer context.</param>
            <returns>return IOAuthSession.</returns>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.GetOAuthHeaderForRequest(DevDefined.OAuth.Consumer.IOAuthSession,System.Net.WebRequest,System.String)">
            <summary>
            Gets the OAuth header for request.
            </summary>
            <param name="oauthSession">The OAuth session.</param>
            <param name="webRequest">The web request.</param>
            <param name="requestBody">The requestBody if form encoded parameters.</param>
            <returns>Returns the OAuth header</returns>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.CreateConsumerContext(System.Boolean)">
            <summary>
            Creates the consumer context.
            </summary>
            <param name="isHeaderToBeAdded">if set to <c>true</c> header will be added to the request.</param>
            <returns>
            Returns IOAuthConsumerContext object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Security.OAuthRequestValidator.CreateAccessToken">
            <summary>
            Creates the access token.
            </summary>
            <returns>returns OAuth token.</returns>
        </member>
        <member name="P:Intuit.Ipp.Security.OAuthRequestValidator.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Security.OAuthRequestValidator.AccessTokenSecret">
            <summary>
            Gets or sets the access token secret.
            </summary>
            <value>
            The access token secret.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Security.OAuthRequestValidator.ConsumerKey">
            <summary>
            Gets or sets the consumer key.
            </summary>
            <value>
            The consumer key.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Security.OAuthRequestValidator.ConsumerSecret">
            <summary>
            Gets or sets the consumer secret.
            </summary>
            <value>
            The consumer secret.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Security.OAuthRequestValidator.AdditionalParameters">
            <summary>
            Gets or sets the additional parameters.
            </summary>
            <value>
            The additional parameters.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Security.OAuthRequestValidator.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The asymmetric algorithm key.
            </value>
        </member>
    </members>
</doc>
